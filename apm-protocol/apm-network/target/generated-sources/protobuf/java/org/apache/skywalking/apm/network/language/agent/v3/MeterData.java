// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: language-agent/Meter.proto

package org.apache.skywalking.apm.network.language.agent.v3;

/**
 * <pre>
 * Single meter data, if the same metrics have a different label, they will separate.
 * </pre>
 *
 * Protobuf type {@code skywalking.v3.MeterData}
 */
public final class MeterData extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:skywalking.v3.MeterData)
    MeterDataOrBuilder {
private static final long serialVersionUID = 0L;
  // Use MeterData.newBuilder() to construct.
  private MeterData(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private MeterData() {
    service_ = "";
    serviceInstance_ = "";
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new MeterData();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private MeterData(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            org.apache.skywalking.apm.network.language.agent.v3.MeterSingleValue.Builder subBuilder = null;
            if (metricCase_ == 1) {
              subBuilder = ((org.apache.skywalking.apm.network.language.agent.v3.MeterSingleValue) metric_).toBuilder();
            }
            metric_ =
                input.readMessage(org.apache.skywalking.apm.network.language.agent.v3.MeterSingleValue.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((org.apache.skywalking.apm.network.language.agent.v3.MeterSingleValue) metric_);
              metric_ = subBuilder.buildPartial();
            }
            metricCase_ = 1;
            break;
          }
          case 18: {
            org.apache.skywalking.apm.network.language.agent.v3.MeterHistogram.Builder subBuilder = null;
            if (metricCase_ == 2) {
              subBuilder = ((org.apache.skywalking.apm.network.language.agent.v3.MeterHistogram) metric_).toBuilder();
            }
            metric_ =
                input.readMessage(org.apache.skywalking.apm.network.language.agent.v3.MeterHistogram.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((org.apache.skywalking.apm.network.language.agent.v3.MeterHistogram) metric_);
              metric_ = subBuilder.buildPartial();
            }
            metricCase_ = 2;
            break;
          }
          case 26: {
            java.lang.String s = input.readStringRequireUtf8();

            service_ = s;
            break;
          }
          case 34: {
            java.lang.String s = input.readStringRequireUtf8();

            serviceInstance_ = s;
            break;
          }
          case 40: {

            timestamp_ = input.readInt64();
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return org.apache.skywalking.apm.network.language.agent.v3.Meter.internal_static_skywalking_v3_MeterData_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return org.apache.skywalking.apm.network.language.agent.v3.Meter.internal_static_skywalking_v3_MeterData_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            org.apache.skywalking.apm.network.language.agent.v3.MeterData.class, org.apache.skywalking.apm.network.language.agent.v3.MeterData.Builder.class);
  }

  private int metricCase_ = 0;
  private java.lang.Object metric_;
  public enum MetricCase
      implements com.google.protobuf.Internal.EnumLite,
          com.google.protobuf.AbstractMessage.InternalOneOfEnum {
    SINGLEVALUE(1),
    HISTOGRAM(2),
    METRIC_NOT_SET(0);
    private final int value;
    private MetricCase(int value) {
      this.value = value;
    }
    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static MetricCase valueOf(int value) {
      return forNumber(value);
    }

    public static MetricCase forNumber(int value) {
      switch (value) {
        case 1: return SINGLEVALUE;
        case 2: return HISTOGRAM;
        case 0: return METRIC_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  public MetricCase
  getMetricCase() {
    return MetricCase.forNumber(
        metricCase_);
  }

  public static final int SINGLEVALUE_FIELD_NUMBER = 1;
  /**
   * <code>.skywalking.v3.MeterSingleValue singleValue = 1;</code>
   * @return Whether the singleValue field is set.
   */
  @java.lang.Override
  public boolean hasSingleValue() {
    return metricCase_ == 1;
  }
  /**
   * <code>.skywalking.v3.MeterSingleValue singleValue = 1;</code>
   * @return The singleValue.
   */
  @java.lang.Override
  public org.apache.skywalking.apm.network.language.agent.v3.MeterSingleValue getSingleValue() {
    if (metricCase_ == 1) {
       return (org.apache.skywalking.apm.network.language.agent.v3.MeterSingleValue) metric_;
    }
    return org.apache.skywalking.apm.network.language.agent.v3.MeterSingleValue.getDefaultInstance();
  }
  /**
   * <code>.skywalking.v3.MeterSingleValue singleValue = 1;</code>
   */
  @java.lang.Override
  public org.apache.skywalking.apm.network.language.agent.v3.MeterSingleValueOrBuilder getSingleValueOrBuilder() {
    if (metricCase_ == 1) {
       return (org.apache.skywalking.apm.network.language.agent.v3.MeterSingleValue) metric_;
    }
    return org.apache.skywalking.apm.network.language.agent.v3.MeterSingleValue.getDefaultInstance();
  }

  public static final int HISTOGRAM_FIELD_NUMBER = 2;
  /**
   * <code>.skywalking.v3.MeterHistogram histogram = 2;</code>
   * @return Whether the histogram field is set.
   */
  @java.lang.Override
  public boolean hasHistogram() {
    return metricCase_ == 2;
  }
  /**
   * <code>.skywalking.v3.MeterHistogram histogram = 2;</code>
   * @return The histogram.
   */
  @java.lang.Override
  public org.apache.skywalking.apm.network.language.agent.v3.MeterHistogram getHistogram() {
    if (metricCase_ == 2) {
       return (org.apache.skywalking.apm.network.language.agent.v3.MeterHistogram) metric_;
    }
    return org.apache.skywalking.apm.network.language.agent.v3.MeterHistogram.getDefaultInstance();
  }
  /**
   * <code>.skywalking.v3.MeterHistogram histogram = 2;</code>
   */
  @java.lang.Override
  public org.apache.skywalking.apm.network.language.agent.v3.MeterHistogramOrBuilder getHistogramOrBuilder() {
    if (metricCase_ == 2) {
       return (org.apache.skywalking.apm.network.language.agent.v3.MeterHistogram) metric_;
    }
    return org.apache.skywalking.apm.network.language.agent.v3.MeterHistogram.getDefaultInstance();
  }

  public static final int SERVICE_FIELD_NUMBER = 3;
  private volatile java.lang.Object service_;
  /**
   * <pre>
   * Service name, be set value in the first element in the stream-call.
   * </pre>
   *
   * <code>string service = 3;</code>
   * @return The service.
   */
  @java.lang.Override
  public java.lang.String getService() {
    java.lang.Object ref = service_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      service_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Service name, be set value in the first element in the stream-call.
   * </pre>
   *
   * <code>string service = 3;</code>
   * @return The bytes for service.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getServiceBytes() {
    java.lang.Object ref = service_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      service_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int SERVICEINSTANCE_FIELD_NUMBER = 4;
  private volatile java.lang.Object serviceInstance_;
  /**
   * <pre>
   * Service instance name, be set value in the first element in the stream-call.
   * </pre>
   *
   * <code>string serviceInstance = 4;</code>
   * @return The serviceInstance.
   */
  @java.lang.Override
  public java.lang.String getServiceInstance() {
    java.lang.Object ref = serviceInstance_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      serviceInstance_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Service instance name, be set value in the first element in the stream-call.
   * </pre>
   *
   * <code>string serviceInstance = 4;</code>
   * @return The bytes for serviceInstance.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getServiceInstanceBytes() {
    java.lang.Object ref = serviceInstance_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      serviceInstance_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int TIMESTAMP_FIELD_NUMBER = 5;
  private long timestamp_;
  /**
   * <pre>
   * Meter data report time, be set value in the first element in the stream-call.
   * </pre>
   *
   * <code>int64 timestamp = 5;</code>
   * @return The timestamp.
   */
  @java.lang.Override
  public long getTimestamp() {
    return timestamp_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (metricCase_ == 1) {
      output.writeMessage(1, (org.apache.skywalking.apm.network.language.agent.v3.MeterSingleValue) metric_);
    }
    if (metricCase_ == 2) {
      output.writeMessage(2, (org.apache.skywalking.apm.network.language.agent.v3.MeterHistogram) metric_);
    }
    if (!getServiceBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 3, service_);
    }
    if (!getServiceInstanceBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 4, serviceInstance_);
    }
    if (timestamp_ != 0L) {
      output.writeInt64(5, timestamp_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (metricCase_ == 1) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, (org.apache.skywalking.apm.network.language.agent.v3.MeterSingleValue) metric_);
    }
    if (metricCase_ == 2) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, (org.apache.skywalking.apm.network.language.agent.v3.MeterHistogram) metric_);
    }
    if (!getServiceBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, service_);
    }
    if (!getServiceInstanceBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, serviceInstance_);
    }
    if (timestamp_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(5, timestamp_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof org.apache.skywalking.apm.network.language.agent.v3.MeterData)) {
      return super.equals(obj);
    }
    org.apache.skywalking.apm.network.language.agent.v3.MeterData other = (org.apache.skywalking.apm.network.language.agent.v3.MeterData) obj;

    if (!getService()
        .equals(other.getService())) return false;
    if (!getServiceInstance()
        .equals(other.getServiceInstance())) return false;
    if (getTimestamp()
        != other.getTimestamp()) return false;
    if (!getMetricCase().equals(other.getMetricCase())) return false;
    switch (metricCase_) {
      case 1:
        if (!getSingleValue()
            .equals(other.getSingleValue())) return false;
        break;
      case 2:
        if (!getHistogram()
            .equals(other.getHistogram())) return false;
        break;
      case 0:
      default:
    }
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + SERVICE_FIELD_NUMBER;
    hash = (53 * hash) + getService().hashCode();
    hash = (37 * hash) + SERVICEINSTANCE_FIELD_NUMBER;
    hash = (53 * hash) + getServiceInstance().hashCode();
    hash = (37 * hash) + TIMESTAMP_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getTimestamp());
    switch (metricCase_) {
      case 1:
        hash = (37 * hash) + SINGLEVALUE_FIELD_NUMBER;
        hash = (53 * hash) + getSingleValue().hashCode();
        break;
      case 2:
        hash = (37 * hash) + HISTOGRAM_FIELD_NUMBER;
        hash = (53 * hash) + getHistogram().hashCode();
        break;
      case 0:
      default:
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static org.apache.skywalking.apm.network.language.agent.v3.MeterData parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.apache.skywalking.apm.network.language.agent.v3.MeterData parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.apache.skywalking.apm.network.language.agent.v3.MeterData parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.apache.skywalking.apm.network.language.agent.v3.MeterData parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.apache.skywalking.apm.network.language.agent.v3.MeterData parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.apache.skywalking.apm.network.language.agent.v3.MeterData parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.apache.skywalking.apm.network.language.agent.v3.MeterData parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.apache.skywalking.apm.network.language.agent.v3.MeterData parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.apache.skywalking.apm.network.language.agent.v3.MeterData parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static org.apache.skywalking.apm.network.language.agent.v3.MeterData parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.apache.skywalking.apm.network.language.agent.v3.MeterData parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.apache.skywalking.apm.network.language.agent.v3.MeterData parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(org.apache.skywalking.apm.network.language.agent.v3.MeterData prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Single meter data, if the same metrics have a different label, they will separate.
   * </pre>
   *
   * Protobuf type {@code skywalking.v3.MeterData}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:skywalking.v3.MeterData)
      org.apache.skywalking.apm.network.language.agent.v3.MeterDataOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.apache.skywalking.apm.network.language.agent.v3.Meter.internal_static_skywalking_v3_MeterData_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.skywalking.apm.network.language.agent.v3.Meter.internal_static_skywalking_v3_MeterData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.skywalking.apm.network.language.agent.v3.MeterData.class, org.apache.skywalking.apm.network.language.agent.v3.MeterData.Builder.class);
    }

    // Construct using org.apache.skywalking.apm.network.language.agent.v3.MeterData.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      service_ = "";

      serviceInstance_ = "";

      timestamp_ = 0L;

      metricCase_ = 0;
      metric_ = null;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return org.apache.skywalking.apm.network.language.agent.v3.Meter.internal_static_skywalking_v3_MeterData_descriptor;
    }

    @java.lang.Override
    public org.apache.skywalking.apm.network.language.agent.v3.MeterData getDefaultInstanceForType() {
      return org.apache.skywalking.apm.network.language.agent.v3.MeterData.getDefaultInstance();
    }

    @java.lang.Override
    public org.apache.skywalking.apm.network.language.agent.v3.MeterData build() {
      org.apache.skywalking.apm.network.language.agent.v3.MeterData result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public org.apache.skywalking.apm.network.language.agent.v3.MeterData buildPartial() {
      org.apache.skywalking.apm.network.language.agent.v3.MeterData result = new org.apache.skywalking.apm.network.language.agent.v3.MeterData(this);
      if (metricCase_ == 1) {
        if (singleValueBuilder_ == null) {
          result.metric_ = metric_;
        } else {
          result.metric_ = singleValueBuilder_.build();
        }
      }
      if (metricCase_ == 2) {
        if (histogramBuilder_ == null) {
          result.metric_ = metric_;
        } else {
          result.metric_ = histogramBuilder_.build();
        }
      }
      result.service_ = service_;
      result.serviceInstance_ = serviceInstance_;
      result.timestamp_ = timestamp_;
      result.metricCase_ = metricCase_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof org.apache.skywalking.apm.network.language.agent.v3.MeterData) {
        return mergeFrom((org.apache.skywalking.apm.network.language.agent.v3.MeterData)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(org.apache.skywalking.apm.network.language.agent.v3.MeterData other) {
      if (other == org.apache.skywalking.apm.network.language.agent.v3.MeterData.getDefaultInstance()) return this;
      if (!other.getService().isEmpty()) {
        service_ = other.service_;
        onChanged();
      }
      if (!other.getServiceInstance().isEmpty()) {
        serviceInstance_ = other.serviceInstance_;
        onChanged();
      }
      if (other.getTimestamp() != 0L) {
        setTimestamp(other.getTimestamp());
      }
      switch (other.getMetricCase()) {
        case SINGLEVALUE: {
          mergeSingleValue(other.getSingleValue());
          break;
        }
        case HISTOGRAM: {
          mergeHistogram(other.getHistogram());
          break;
        }
        case METRIC_NOT_SET: {
          break;
        }
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      org.apache.skywalking.apm.network.language.agent.v3.MeterData parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (org.apache.skywalking.apm.network.language.agent.v3.MeterData) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int metricCase_ = 0;
    private java.lang.Object metric_;
    public MetricCase
        getMetricCase() {
      return MetricCase.forNumber(
          metricCase_);
    }

    public Builder clearMetric() {
      metricCase_ = 0;
      metric_ = null;
      onChanged();
      return this;
    }


    private com.google.protobuf.SingleFieldBuilderV3<
        org.apache.skywalking.apm.network.language.agent.v3.MeterSingleValue, org.apache.skywalking.apm.network.language.agent.v3.MeterSingleValue.Builder, org.apache.skywalking.apm.network.language.agent.v3.MeterSingleValueOrBuilder> singleValueBuilder_;
    /**
     * <code>.skywalking.v3.MeterSingleValue singleValue = 1;</code>
     * @return Whether the singleValue field is set.
     */
    @java.lang.Override
    public boolean hasSingleValue() {
      return metricCase_ == 1;
    }
    /**
     * <code>.skywalking.v3.MeterSingleValue singleValue = 1;</code>
     * @return The singleValue.
     */
    @java.lang.Override
    public org.apache.skywalking.apm.network.language.agent.v3.MeterSingleValue getSingleValue() {
      if (singleValueBuilder_ == null) {
        if (metricCase_ == 1) {
          return (org.apache.skywalking.apm.network.language.agent.v3.MeterSingleValue) metric_;
        }
        return org.apache.skywalking.apm.network.language.agent.v3.MeterSingleValue.getDefaultInstance();
      } else {
        if (metricCase_ == 1) {
          return singleValueBuilder_.getMessage();
        }
        return org.apache.skywalking.apm.network.language.agent.v3.MeterSingleValue.getDefaultInstance();
      }
    }
    /**
     * <code>.skywalking.v3.MeterSingleValue singleValue = 1;</code>
     */
    public Builder setSingleValue(org.apache.skywalking.apm.network.language.agent.v3.MeterSingleValue value) {
      if (singleValueBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        metric_ = value;
        onChanged();
      } else {
        singleValueBuilder_.setMessage(value);
      }
      metricCase_ = 1;
      return this;
    }
    /**
     * <code>.skywalking.v3.MeterSingleValue singleValue = 1;</code>
     */
    public Builder setSingleValue(
        org.apache.skywalking.apm.network.language.agent.v3.MeterSingleValue.Builder builderForValue) {
      if (singleValueBuilder_ == null) {
        metric_ = builderForValue.build();
        onChanged();
      } else {
        singleValueBuilder_.setMessage(builderForValue.build());
      }
      metricCase_ = 1;
      return this;
    }
    /**
     * <code>.skywalking.v3.MeterSingleValue singleValue = 1;</code>
     */
    public Builder mergeSingleValue(org.apache.skywalking.apm.network.language.agent.v3.MeterSingleValue value) {
      if (singleValueBuilder_ == null) {
        if (metricCase_ == 1 &&
            metric_ != org.apache.skywalking.apm.network.language.agent.v3.MeterSingleValue.getDefaultInstance()) {
          metric_ = org.apache.skywalking.apm.network.language.agent.v3.MeterSingleValue.newBuilder((org.apache.skywalking.apm.network.language.agent.v3.MeterSingleValue) metric_)
              .mergeFrom(value).buildPartial();
        } else {
          metric_ = value;
        }
        onChanged();
      } else {
        if (metricCase_ == 1) {
          singleValueBuilder_.mergeFrom(value);
        }
        singleValueBuilder_.setMessage(value);
      }
      metricCase_ = 1;
      return this;
    }
    /**
     * <code>.skywalking.v3.MeterSingleValue singleValue = 1;</code>
     */
    public Builder clearSingleValue() {
      if (singleValueBuilder_ == null) {
        if (metricCase_ == 1) {
          metricCase_ = 0;
          metric_ = null;
          onChanged();
        }
      } else {
        if (metricCase_ == 1) {
          metricCase_ = 0;
          metric_ = null;
        }
        singleValueBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.skywalking.v3.MeterSingleValue singleValue = 1;</code>
     */
    public org.apache.skywalking.apm.network.language.agent.v3.MeterSingleValue.Builder getSingleValueBuilder() {
      return getSingleValueFieldBuilder().getBuilder();
    }
    /**
     * <code>.skywalking.v3.MeterSingleValue singleValue = 1;</code>
     */
    @java.lang.Override
    public org.apache.skywalking.apm.network.language.agent.v3.MeterSingleValueOrBuilder getSingleValueOrBuilder() {
      if ((metricCase_ == 1) && (singleValueBuilder_ != null)) {
        return singleValueBuilder_.getMessageOrBuilder();
      } else {
        if (metricCase_ == 1) {
          return (org.apache.skywalking.apm.network.language.agent.v3.MeterSingleValue) metric_;
        }
        return org.apache.skywalking.apm.network.language.agent.v3.MeterSingleValue.getDefaultInstance();
      }
    }
    /**
     * <code>.skywalking.v3.MeterSingleValue singleValue = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.apache.skywalking.apm.network.language.agent.v3.MeterSingleValue, org.apache.skywalking.apm.network.language.agent.v3.MeterSingleValue.Builder, org.apache.skywalking.apm.network.language.agent.v3.MeterSingleValueOrBuilder> 
        getSingleValueFieldBuilder() {
      if (singleValueBuilder_ == null) {
        if (!(metricCase_ == 1)) {
          metric_ = org.apache.skywalking.apm.network.language.agent.v3.MeterSingleValue.getDefaultInstance();
        }
        singleValueBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.apache.skywalking.apm.network.language.agent.v3.MeterSingleValue, org.apache.skywalking.apm.network.language.agent.v3.MeterSingleValue.Builder, org.apache.skywalking.apm.network.language.agent.v3.MeterSingleValueOrBuilder>(
                (org.apache.skywalking.apm.network.language.agent.v3.MeterSingleValue) metric_,
                getParentForChildren(),
                isClean());
        metric_ = null;
      }
      metricCase_ = 1;
      onChanged();;
      return singleValueBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        org.apache.skywalking.apm.network.language.agent.v3.MeterHistogram, org.apache.skywalking.apm.network.language.agent.v3.MeterHistogram.Builder, org.apache.skywalking.apm.network.language.agent.v3.MeterHistogramOrBuilder> histogramBuilder_;
    /**
     * <code>.skywalking.v3.MeterHistogram histogram = 2;</code>
     * @return Whether the histogram field is set.
     */
    @java.lang.Override
    public boolean hasHistogram() {
      return metricCase_ == 2;
    }
    /**
     * <code>.skywalking.v3.MeterHistogram histogram = 2;</code>
     * @return The histogram.
     */
    @java.lang.Override
    public org.apache.skywalking.apm.network.language.agent.v3.MeterHistogram getHistogram() {
      if (histogramBuilder_ == null) {
        if (metricCase_ == 2) {
          return (org.apache.skywalking.apm.network.language.agent.v3.MeterHistogram) metric_;
        }
        return org.apache.skywalking.apm.network.language.agent.v3.MeterHistogram.getDefaultInstance();
      } else {
        if (metricCase_ == 2) {
          return histogramBuilder_.getMessage();
        }
        return org.apache.skywalking.apm.network.language.agent.v3.MeterHistogram.getDefaultInstance();
      }
    }
    /**
     * <code>.skywalking.v3.MeterHistogram histogram = 2;</code>
     */
    public Builder setHistogram(org.apache.skywalking.apm.network.language.agent.v3.MeterHistogram value) {
      if (histogramBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        metric_ = value;
        onChanged();
      } else {
        histogramBuilder_.setMessage(value);
      }
      metricCase_ = 2;
      return this;
    }
    /**
     * <code>.skywalking.v3.MeterHistogram histogram = 2;</code>
     */
    public Builder setHistogram(
        org.apache.skywalking.apm.network.language.agent.v3.MeterHistogram.Builder builderForValue) {
      if (histogramBuilder_ == null) {
        metric_ = builderForValue.build();
        onChanged();
      } else {
        histogramBuilder_.setMessage(builderForValue.build());
      }
      metricCase_ = 2;
      return this;
    }
    /**
     * <code>.skywalking.v3.MeterHistogram histogram = 2;</code>
     */
    public Builder mergeHistogram(org.apache.skywalking.apm.network.language.agent.v3.MeterHistogram value) {
      if (histogramBuilder_ == null) {
        if (metricCase_ == 2 &&
            metric_ != org.apache.skywalking.apm.network.language.agent.v3.MeterHistogram.getDefaultInstance()) {
          metric_ = org.apache.skywalking.apm.network.language.agent.v3.MeterHistogram.newBuilder((org.apache.skywalking.apm.network.language.agent.v3.MeterHistogram) metric_)
              .mergeFrom(value).buildPartial();
        } else {
          metric_ = value;
        }
        onChanged();
      } else {
        if (metricCase_ == 2) {
          histogramBuilder_.mergeFrom(value);
        }
        histogramBuilder_.setMessage(value);
      }
      metricCase_ = 2;
      return this;
    }
    /**
     * <code>.skywalking.v3.MeterHistogram histogram = 2;</code>
     */
    public Builder clearHistogram() {
      if (histogramBuilder_ == null) {
        if (metricCase_ == 2) {
          metricCase_ = 0;
          metric_ = null;
          onChanged();
        }
      } else {
        if (metricCase_ == 2) {
          metricCase_ = 0;
          metric_ = null;
        }
        histogramBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.skywalking.v3.MeterHistogram histogram = 2;</code>
     */
    public org.apache.skywalking.apm.network.language.agent.v3.MeterHistogram.Builder getHistogramBuilder() {
      return getHistogramFieldBuilder().getBuilder();
    }
    /**
     * <code>.skywalking.v3.MeterHistogram histogram = 2;</code>
     */
    @java.lang.Override
    public org.apache.skywalking.apm.network.language.agent.v3.MeterHistogramOrBuilder getHistogramOrBuilder() {
      if ((metricCase_ == 2) && (histogramBuilder_ != null)) {
        return histogramBuilder_.getMessageOrBuilder();
      } else {
        if (metricCase_ == 2) {
          return (org.apache.skywalking.apm.network.language.agent.v3.MeterHistogram) metric_;
        }
        return org.apache.skywalking.apm.network.language.agent.v3.MeterHistogram.getDefaultInstance();
      }
    }
    /**
     * <code>.skywalking.v3.MeterHistogram histogram = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.apache.skywalking.apm.network.language.agent.v3.MeterHistogram, org.apache.skywalking.apm.network.language.agent.v3.MeterHistogram.Builder, org.apache.skywalking.apm.network.language.agent.v3.MeterHistogramOrBuilder> 
        getHistogramFieldBuilder() {
      if (histogramBuilder_ == null) {
        if (!(metricCase_ == 2)) {
          metric_ = org.apache.skywalking.apm.network.language.agent.v3.MeterHistogram.getDefaultInstance();
        }
        histogramBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.apache.skywalking.apm.network.language.agent.v3.MeterHistogram, org.apache.skywalking.apm.network.language.agent.v3.MeterHistogram.Builder, org.apache.skywalking.apm.network.language.agent.v3.MeterHistogramOrBuilder>(
                (org.apache.skywalking.apm.network.language.agent.v3.MeterHistogram) metric_,
                getParentForChildren(),
                isClean());
        metric_ = null;
      }
      metricCase_ = 2;
      onChanged();;
      return histogramBuilder_;
    }

    private java.lang.Object service_ = "";
    /**
     * <pre>
     * Service name, be set value in the first element in the stream-call.
     * </pre>
     *
     * <code>string service = 3;</code>
     * @return The service.
     */
    public java.lang.String getService() {
      java.lang.Object ref = service_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        service_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Service name, be set value in the first element in the stream-call.
     * </pre>
     *
     * <code>string service = 3;</code>
     * @return The bytes for service.
     */
    public com.google.protobuf.ByteString
        getServiceBytes() {
      java.lang.Object ref = service_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        service_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Service name, be set value in the first element in the stream-call.
     * </pre>
     *
     * <code>string service = 3;</code>
     * @param value The service to set.
     * @return This builder for chaining.
     */
    public Builder setService(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      service_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Service name, be set value in the first element in the stream-call.
     * </pre>
     *
     * <code>string service = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearService() {
      
      service_ = getDefaultInstance().getService();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Service name, be set value in the first element in the stream-call.
     * </pre>
     *
     * <code>string service = 3;</code>
     * @param value The bytes for service to set.
     * @return This builder for chaining.
     */
    public Builder setServiceBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      service_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object serviceInstance_ = "";
    /**
     * <pre>
     * Service instance name, be set value in the first element in the stream-call.
     * </pre>
     *
     * <code>string serviceInstance = 4;</code>
     * @return The serviceInstance.
     */
    public java.lang.String getServiceInstance() {
      java.lang.Object ref = serviceInstance_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        serviceInstance_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Service instance name, be set value in the first element in the stream-call.
     * </pre>
     *
     * <code>string serviceInstance = 4;</code>
     * @return The bytes for serviceInstance.
     */
    public com.google.protobuf.ByteString
        getServiceInstanceBytes() {
      java.lang.Object ref = serviceInstance_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        serviceInstance_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Service instance name, be set value in the first element in the stream-call.
     * </pre>
     *
     * <code>string serviceInstance = 4;</code>
     * @param value The serviceInstance to set.
     * @return This builder for chaining.
     */
    public Builder setServiceInstance(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      serviceInstance_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Service instance name, be set value in the first element in the stream-call.
     * </pre>
     *
     * <code>string serviceInstance = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearServiceInstance() {
      
      serviceInstance_ = getDefaultInstance().getServiceInstance();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Service instance name, be set value in the first element in the stream-call.
     * </pre>
     *
     * <code>string serviceInstance = 4;</code>
     * @param value The bytes for serviceInstance to set.
     * @return This builder for chaining.
     */
    public Builder setServiceInstanceBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      serviceInstance_ = value;
      onChanged();
      return this;
    }

    private long timestamp_ ;
    /**
     * <pre>
     * Meter data report time, be set value in the first element in the stream-call.
     * </pre>
     *
     * <code>int64 timestamp = 5;</code>
     * @return The timestamp.
     */
    @java.lang.Override
    public long getTimestamp() {
      return timestamp_;
    }
    /**
     * <pre>
     * Meter data report time, be set value in the first element in the stream-call.
     * </pre>
     *
     * <code>int64 timestamp = 5;</code>
     * @param value The timestamp to set.
     * @return This builder for chaining.
     */
    public Builder setTimestamp(long value) {
      
      timestamp_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Meter data report time, be set value in the first element in the stream-call.
     * </pre>
     *
     * <code>int64 timestamp = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearTimestamp() {
      
      timestamp_ = 0L;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:skywalking.v3.MeterData)
  }

  // @@protoc_insertion_point(class_scope:skywalking.v3.MeterData)
  private static final org.apache.skywalking.apm.network.language.agent.v3.MeterData DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new org.apache.skywalking.apm.network.language.agent.v3.MeterData();
  }

  public static org.apache.skywalking.apm.network.language.agent.v3.MeterData getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<MeterData>
      PARSER = new com.google.protobuf.AbstractParser<MeterData>() {
    @java.lang.Override
    public MeterData parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new MeterData(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<MeterData> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<MeterData> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public org.apache.skywalking.apm.network.language.agent.v3.MeterData getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

