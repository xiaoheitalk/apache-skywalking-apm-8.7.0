// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: language-agent/CLRMetric.proto

package org.apache.skywalking.apm.network.language.agent.v3;

public final class CLRMetricOuterClass {
  private CLRMetricOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_skywalking_v3_CLRMetricCollection_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_skywalking_v3_CLRMetricCollection_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_skywalking_v3_CLRMetric_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_skywalking_v3_CLRMetric_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_skywalking_v3_ClrGC_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_skywalking_v3_ClrGC_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_skywalking_v3_ClrThread_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_skywalking_v3_ClrThread_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\036language-agent/CLRMetric.proto\022\rskywal" +
      "king.v3\032\023common/Common.proto\"j\n\023CLRMetri" +
      "cCollection\022)\n\007metrics\030\001 \003(\0132\030.skywalkin" +
      "g.v3.CLRMetric\022\017\n\007service\030\002 \001(\t\022\027\n\017servi" +
      "ceInstance\030\003 \001(\t\"\206\001\n\tCLRMetric\022\014\n\004time\030\001" +
      " \001(\003\022\037\n\003cpu\030\002 \001(\0132\022.skywalking.v3.CPU\022 \n" +
      "\002gc\030\003 \001(\0132\024.skywalking.v3.ClrGC\022(\n\006threa" +
      "d\030\004 \001(\0132\030.skywalking.v3.ClrThread\"i\n\005Clr" +
      "GC\022\030\n\020Gen0CollectCount\030\001 \001(\003\022\030\n\020Gen1Coll" +
      "ectCount\030\002 \001(\003\022\030\n\020Gen2CollectCount\030\003 \001(\003" +
      "\022\022\n\nHeapMemory\030\004 \001(\003\"\217\001\n\tClrThread\022&\n\036Av" +
      "ailableCompletionPortThreads\030\001 \001(\005\022\036\n\026Av" +
      "ailableWorkerThreads\030\002 \001(\005\022 \n\030MaxComplet" +
      "ionPortThreads\030\003 \001(\005\022\030\n\020MaxWorkerThreads" +
      "\030\004 \001(\0052b\n\026CLRMetricReportService\022H\n\007coll" +
      "ect\022\".skywalking.v3.CLRMetricCollection\032" +
      "\027.skywalking.v3.Commands\"\000B\223\001\n3org.apach" +
      "e.skywalking.apm.network.language.agent." +
      "v3P\001Z:skywalking.apache.org/repo/goapi/c" +
      "ollect/language/agent/v3\252\002\035SkyWalking.Ne" +
      "tworkProtocol.V3b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          org.apache.skywalking.apm.network.common.v3.Common.getDescriptor(),
        });
    internal_static_skywalking_v3_CLRMetricCollection_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_skywalking_v3_CLRMetricCollection_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_skywalking_v3_CLRMetricCollection_descriptor,
        new java.lang.String[] { "Metrics", "Service", "ServiceInstance", });
    internal_static_skywalking_v3_CLRMetric_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_skywalking_v3_CLRMetric_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_skywalking_v3_CLRMetric_descriptor,
        new java.lang.String[] { "Time", "Cpu", "Gc", "Thread", });
    internal_static_skywalking_v3_ClrGC_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_skywalking_v3_ClrGC_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_skywalking_v3_ClrGC_descriptor,
        new java.lang.String[] { "Gen0CollectCount", "Gen1CollectCount", "Gen2CollectCount", "HeapMemory", });
    internal_static_skywalking_v3_ClrThread_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_skywalking_v3_ClrThread_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_skywalking_v3_ClrThread_descriptor,
        new java.lang.String[] { "AvailableCompletionPortThreads", "AvailableWorkerThreads", "MaxCompletionPortThreads", "MaxWorkerThreads", });
    org.apache.skywalking.apm.network.common.v3.Common.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
