// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: configuration-service.proto

package org.apache.skywalking.oap.server.configuration.service;

public interface ConfigurationResponseOrBuilder extends
    // @@protoc_insertion_point(interface_extends:ConfigurationResponse)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Include all config items.
   * All config name should be not empty,
   * the name is composed by "module name"."provider name"."item name".
   * Each watcher implementor provides this, and it will be notified when the value changed.
   * If the config center wants to set the value to NULL or empty,
   * must set the name with empty value explicitly.
   * </pre>
   *
   * <code>repeated .Config configTable = 1;</code>
   */
  java.util.List<org.apache.skywalking.oap.server.configuration.service.Config> 
      getConfigTableList();
  /**
   * <pre>
   * Include all config items.
   * All config name should be not empty,
   * the name is composed by "module name"."provider name"."item name".
   * Each watcher implementor provides this, and it will be notified when the value changed.
   * If the config center wants to set the value to NULL or empty,
   * must set the name with empty value explicitly.
   * </pre>
   *
   * <code>repeated .Config configTable = 1;</code>
   */
  org.apache.skywalking.oap.server.configuration.service.Config getConfigTable(int index);
  /**
   * <pre>
   * Include all config items.
   * All config name should be not empty,
   * the name is composed by "module name"."provider name"."item name".
   * Each watcher implementor provides this, and it will be notified when the value changed.
   * If the config center wants to set the value to NULL or empty,
   * must set the name with empty value explicitly.
   * </pre>
   *
   * <code>repeated .Config configTable = 1;</code>
   */
  int getConfigTableCount();
  /**
   * <pre>
   * Include all config items.
   * All config name should be not empty,
   * the name is composed by "module name"."provider name"."item name".
   * Each watcher implementor provides this, and it will be notified when the value changed.
   * If the config center wants to set the value to NULL or empty,
   * must set the name with empty value explicitly.
   * </pre>
   *
   * <code>repeated .Config configTable = 1;</code>
   */
  java.util.List<? extends org.apache.skywalking.oap.server.configuration.service.ConfigOrBuilder> 
      getConfigTableOrBuilderList();
  /**
   * <pre>
   * Include all config items.
   * All config name should be not empty,
   * the name is composed by "module name"."provider name"."item name".
   * Each watcher implementor provides this, and it will be notified when the value changed.
   * If the config center wants to set the value to NULL or empty,
   * must set the name with empty value explicitly.
   * </pre>
   *
   * <code>repeated .Config configTable = 1;</code>
   */
  org.apache.skywalking.oap.server.configuration.service.ConfigOrBuilder getConfigTableOrBuilder(
      int index);

  /**
   * <pre>
   * UUID is literal string represents the content of the config table.
   * If config table is unchanged, then could response the same uuid, and config table is not required.
   * </pre>
   *
   * <code>string uuid = 2;</code>
   * @return The uuid.
   */
  java.lang.String getUuid();
  /**
   * <pre>
   * UUID is literal string represents the content of the config table.
   * If config table is unchanged, then could response the same uuid, and config table is not required.
   * </pre>
   *
   * <code>string uuid = 2;</code>
   * @return The bytes for uuid.
   */
  com.google.protobuf.ByteString
      getUuidBytes();
}
